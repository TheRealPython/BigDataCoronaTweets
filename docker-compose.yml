version: '3'
services:
  generator:
    build: ./generator
    environment:
      KAFKA_BROKER_URL: broker:9092
      TRANSACTIONS_TOPIC: queueing.transactions
      TRANSACTIONS_PER_SECOND: 1000
    command: python3 -u app.py
  detector:
    build: ./detector
    environment:
      KAFKA_BROKER_URL: broker:9092
      TRANSACTIONS_TOPIC: queueing.transactions
      LEGIT_TOPIC: streaming.transactions.legit
      FRAUD_TOPIC: streaming.transactions.fraud
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    command: python3 -u app.py
    depends_on:
    - db
  db:
    image: postgres
    environment:
    - POSTGRES_DB=postgres
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postgres
  loadbalancer:
    image: nginx:alpine
    ports:
      - "3000:3000"
    volumes:
      - ./nginx-load-balancer.conf:/etc/nginx/nginx.conf
    links:
      - web
    depends_on:
      - web
  web:
    build: ./cache
    command: python -u -m flask run --host=0.0.0.0 --port=3000
    environment:
      - FLASK_APP=app.py
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db
  redis:
    image: "redis:latest"
    ports:
      - '6379:6379'
  serving:
    build: ./serving
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    command: python3 -u app.py
    depends_on:
    - db
networks:
  default:
    external:
      name: kafka-network