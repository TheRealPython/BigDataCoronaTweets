version: '3'
services:
  generator:
    build: ./generator
    environment:
      KAFKA_BROKER_URL: broker:9092
      TRANSACTIONS_TOPIC: queueing.transactions
      TRANSACTIONS_PER_SECOND: 1000
    command: python3 -u app.py
  detector:
    build: ./detector
    environment:
      KAFKA_BROKER_URL: broker:9092
      TRANSACTIONS_TOPIC: queueing.transactions
      LEGIT_TOPIC: streaming.transactions.legit
      FRAUD_TOPIC: streaming.transactions.fraud
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    command: python3 -u app.py
    depends_on:
    - db
  # speed:
  #   build: ./speed
  #   environment:
  #     KAFKA_BROKER_URL: broker:9092
  #     TRANSACTIONS_TOPIC: queueing.transactions
  #     LEGIT_TOPIC: streaming.transactions.legit
  #     FRAUD_TOPIC: streaming.transactions.fraud
  #     POSTGRES_DB: postgres
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #   command: python3 -u app.py
  #   depends_on:
  #   - db
  serving:
    build: ./serving
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    command: python3 -u app.py
    depends_on:
    - db   
  db:
    image: postgres
    environment:
    - POSTGRES_DB=postgres
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postgres
  web:
    build: ./cache
    command: flask run --host=0.0.0.0 --port=8000
    ports:
      - 8000:8000
    environment:
      - FLASK_APP=app.py
    env_file:
      - env.list
    depends_on:
      - db
  cache:
    image: redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
volumes:
  redis_data:
networks:
  default:
    external:
      name: kafka-network